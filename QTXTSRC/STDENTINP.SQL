/******************************************************************************/
/*                                                                            */
/*  Inuendo 1.2 (Alpha release) - STANDARD ENTITY INPUT FUNCTIONS (SQL)       */
/*                                                                            */
/*  Copyright (C) 2012, 2017  Christopher F. Burns Sr.                        */
/*    c/o The Inuendo Project (http://inuendo.us).                            */
/*                                                                            */
/*  This program is free software: you can redistribute it and/or modify      */
/*  it under the terms of the GNU General Public License as published by      */
/*  the Free Software Foundation, either version 3 of the License, or         */
/*  (at your option) any later version.                                       */
/*                                                                            */
/*  This program is distributed in the hope that it will be useful,           */
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of            */
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             */
/*  GNU General Public License for more details.                              */
/*                                                                            */
/*  You should have received a copy of the GNU General Public License         */
/*  along with this program.  If not, see <http://www.gnu.org/licenses/>.     */
/*                                                                            */
/******************************************************************************/


/******************************************************************************/
/*  IDENTITY RESOLUTION (BOTH LEGACY ID'S, WITH & WITHOUT MOMENT PARAMETER)   */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETENTITYID (
  PARENTID BIGINT ,
  CLASS VARCHAR(14) ,
  LEGACYN BIGINT ,
  LEGACYA VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETENTITYIDM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETENTITYID5)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETENTITYIDM
  IS 'Get Entity ID (w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETENTITYIDM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETENTITYID (
  PARENTID BIGINT ,
  CLASS VARCHAR(14) ,
  LEGACYN BIGINT ,
  LEGACYA VARCHAR(254) )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETENTITYID
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETENTITYID4)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETENTITYID
  IS 'Get Entity ID' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETENTITYID
TO PUBLIC ;


/******************************************************************************/
/*  IDENTITY RESOLUTION (NUMERIC LEGACY ID, WITH & WITHOUT MOMENT PARAMETER)  */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETENTITYID (
  PARENTID BIGINT ,
  CLASS VARCHAR(14) ,
  LEGACYN BIGINT ,
  MOMENT TIMESTAMP )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETENTITYIDNM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETENTITYIDN4)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETENTITYIDNM
  IS 'Get Entity ID (Numeric Legacy, w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETENTITYIDNM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETENTITYID (
  PARENTID BIGINT ,
  CLASS VARCHAR(14) ,
  LEGACYN BIGINT )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETENTITYIDN
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETENTITYIDN3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETENTITYIDN
  IS 'Get Entity ID (Numeric Legacy)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETENTITYIDN
TO PUBLIC ;


/******************************************************************************/
/*  IDENTITY RESOLUTION (ALPHA LEGACY ID, WITH & WITHOUT MOMENT PARAMETER)  */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETENTITYID (
  PARENTID BIGINT ,
  CLASS VARCHAR(14) ,
  LEGACYA VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETENTITYIDAM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETENTITYIDA4)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETENTITYIDAM
  IS 'Get Entity ID (Alpha Legacy, w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETENTITYIDAM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETENTITYID (
  PARENTID BIGINT ,
  CLASS VARCHAR(14) ,
  LEGACYA VARCHAR(254) )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETENTITYIDA
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETENTITYIDA3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETENTITYIDA
  IS 'Get Entity ID (Alpha Legacy)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETENTITYIDA
TO PUBLIC ;


/******************************************************************************/
/*  RETRIEVAL FROM SUBTABLE ENTDATE (WITH & WITHOUT MOMENT ARGUMENT)          */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETDATE (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS DATE
  LANGUAGE RPGLE
  SPECIFIC GETDATEM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATE3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATEM
  IS 'Get Entity Date (w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATEM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATE (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) )
  RETURNS DATE
  LANGUAGE RPGLE
  SPECIFIC GETDATE
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATE2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATE
  IS 'Get Entity Date' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATE
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATEN (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  DATEFORMAT CHAR(5) ,
  MOMENT TIMESTAMP )
  RETURNS NUMERIC(8)
  LANGUAGE RPGLE
  SPECIFIC GETDATENM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATEN4)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATENM
  IS 'Get Entity Date (Numeric w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATENM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATEN (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  DATEFORMAT CHAR(5) )
  RETURNS NUMERIC(8)
  LANGUAGE RPGLE
  SPECIFIC GETDATEN
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATEN3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATEN
  IS 'Get Entity Date (Numeric)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATEN
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATEA (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  DATEFORMAT CHAR(5) ,
  MOMENT TIMESTAMP )
  RETURNS CHAR(10)
  LANGUAGE RPGLE
  SPECIFIC GETDATEAM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATEA4)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATEAM
  IS 'Get Entity Date (Alpha w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATEAM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATEA (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  DATEFORMAT CHAR(5) )
  RETURNS CHAR(10)
  LANGUAGE RPGLE
  SPECIFIC GETDATEA
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATEA3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATEA
  IS 'Get Entity Date (Alpha)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATEA
TO PUBLIC ;


/******************************************************************************/
/*  RETRIEVAL FROM SUBTABLE ENTFLAG (WITH & WITHOUT MOMENT ARGUMENT)          */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETFLAG (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS CHAR(1)
  LANGUAGE RPGLE
  SPECIFIC GETFLAGM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETFLAG3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETFLAGM
  IS 'Get Entity Flag (w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETFLAGM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETFLAG (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) )
  RETURNS CHAR(1)
  LANGUAGE RPGLE
  SPECIFIC GETFLAG
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETFLAG2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETFLAG
  IS 'Get Entity Flag' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETFLAG
TO PUBLIC ;


/******************************************************************************/
/*  RETRIEVAL FROM SUBTABLE ENTLINK (WITH & WITHOUT MOMENT ARGUMENT)          */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETLINK (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETLINKM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETLINK3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETLINKM
  IS 'Get Entity Link (w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETLINKM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETLINK (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETLINK
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETLINK2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETLINK
  IS 'Get Entity Link' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETLINK
TO PUBLIC ;


/******************************************************************************/
/*  RETRIEVAL FROM SUBTABLE ENTNOTE (WITH & WITHOUT MOMENT ARGUMENT)          */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETNOTE (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS VARCHAR(254)
  LANGUAGE RPGLE
  SPECIFIC GETNOTEM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETNOTE3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETNOTEM
  IS 'Get Entity Note (w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETNOTEM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETNOTE (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) )
  RETURNS VARCHAR(254)
  LANGUAGE RPGLE
  SPECIFIC GETNOTE
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETNOTE2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETNOTE
  IS 'Get Entity Note' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETNOTE
TO PUBLIC ;


/******************************************************************************/
/*  RETRIEVAL FROM SUBTABLE ENTNUMB (WITH & WITHOUT MOMENT ARGUMENT)          */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETNUMB (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS DECIMAL(25, 7)
  LANGUAGE RPGLE
  SPECIFIC GETNUMBM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETNUMB3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETNUMBM
  IS 'Get Entity Number (w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETNUMBM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETNUMB (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) )
  RETURNS DECIMAL(25, 7)
  LANGUAGE RPGLE
  SPECIFIC GETNUMB
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETNUMB2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETNUMB
  IS 'Get Entity Number' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETNUMB
TO PUBLIC ;


/******************************************************************************/
/*  RETRIEVAL FROM SUBTABLE ENTNOTX (WITH & WITHOUT MOMENT ARGUMENT)          */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETNOTX (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS VARCHAR(254)
  LANGUAGE RPGLE
  SPECIFIC GETNOTXM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETNOTX3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETNOTXM
  IS 'Get Entity Encrypted Note (w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETNOTXM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETNOTX (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) )
  RETURNS VARCHAR(254)
  LANGUAGE RPGLE
  SPECIFIC GETNOTX
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETNOTX2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETNOTX
  IS 'Get Entity Encrypted Note' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETNOTX
TO PUBLIC ;


/******************************************************************************/
/*  RETRIEVAL FROM SUBTABLE ENTNUMX (WITH & WITHOUT MOMENT ARGUMENT)          */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETNUMX (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS DECIMAL(25, 7)
  LANGUAGE RPGLE
  SPECIFIC GETNUMXM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETNUMX3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETNUMXM
  IS 'Get Entity Number (Encrypted w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETNUMXM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETNUMX (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) )
  RETURNS DECIMAL(25, 7)
  LANGUAGE RPGLE
  SPECIFIC GETNUMX
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETNUMX2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETNUMX
  IS 'Get Entity Number (Encrypted)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETNUMX
TO PUBLIC ;

/******************************************************************************/
/*  RETRIEVAL FROM SUBTABLE ENTDATX (WITH & WITHOUT MOMENT ARGUMENT)          */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETDATX (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  MOMENT TIMESTAMP )
  RETURNS DATE
  LANGUAGE RPGLE
  SPECIFIC GETDATXM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATX3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATXM
  IS 'Get Entity Encrypted Date (w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATXM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATX (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) )
  RETURNS DATE
  LANGUAGE RPGLE
  SPECIFIC GETDATX
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATX2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATX
  IS 'Get Entity Date' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATX
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATXN (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  DATEFORMAT CHAR(5) ,
  MOMENT TIMESTAMP )
  RETURNS NUMERIC(8)
  LANGUAGE RPGLE
  SPECIFIC GETDATXNM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATXN4)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATXNM
  IS 'Get Entity Encrypted Date (Numeric w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATXNM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATXN (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  DATEFORMAT CHAR(5) )
  RETURNS NUMERIC(8)
  LANGUAGE RPGLE
  SPECIFIC GETDATXN
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATXN3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATXN
  IS 'Get Entity Encrypted Date (Numeric)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATXN
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATXA (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  DATEFORMAT CHAR(5) ,
  MOMENT TIMESTAMP )
  RETURNS CHAR(10)
  LANGUAGE RPGLE
  SPECIFIC GETDATXAM
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATXA4)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATXAM
  IS 'Get Entity Encrypted Date (Alpha w/Moment)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATXAM
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDATXA (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) ,
  DATEFORMAT CHAR(5) )
  RETURNS CHAR(10)
  LANGUAGE RPGLE
  SPECIFIC GETDATXA
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL1(GETDATXA3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDATXA
  IS 'Get Entity Encrypted Date (Alpha)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDATXA
TO PUBLIC ;


/******************************************************************************/
/*  RETRIEVAL OF METADATA FROM ENTHEAD (CURRENT VALUES ONLY)                  */
/******************************************************************************/

CREATE OR REPLACE FUNCTION GETPARENTID (
  ENTITYID BIGINT )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETPARENTID
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTINP(GETPARENTID)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETPARENTID
  IS 'Get Parent ID' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETPARENTID
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETCLASS (
  ENTITYID BIGINT )
  RETURNS VARCHAR(14)
  LANGUAGE RPGLE
  SPECIFIC GETCLASS
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTINP(GETCLASS)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETCLASS
  IS 'Get Class' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETCLASS
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETDESCRIPTOR (
  ENTITYID BIGINT )
  RETURNS VARCHAR(254)
  LANGUAGE RPGLE
  SPECIFIC GETDESCRIPTOR
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTINP(GETDESCRIPTOR)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETDESCRIPTOR
  IS 'Get Descriptor' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETDESCRIPTOR
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETLEGACYN (
  ENTITYID BIGINT )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC GETLEGACYN
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTINP(GETLEGACYN)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETLEGACYN
  IS 'Get Legacy ID (Numeric)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETLEGACYN
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETLEGACYA (
  ENTITYID BIGINT )
  RETURNS VARCHAR(254)
  LANGUAGE RPGLE
  SPECIFIC GETLEGACYA
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTINP(GETLEGACYA)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETLEGACYA
  IS 'Get Legacy ID (Alpha)' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETLEGACYA
TO PUBLIC ;


CREATE OR REPLACE FUNCTION GETSTATUS (
  ENTITYID BIGINT )
  RETURNS CHAR(1)
  LANGUAGE RPGLE
  SPECIFIC GETSTATUS
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTINP(GETSTATUS)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION GETSTATUS
  IS 'Get Status' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION GETSTATUS
TO PUBLIC ;


/******************************************************************************/
/*  HELPER PROCEDURES FOR INTEGRITY AND AUDIT SUPPORT                         */
/******************************************************************************/

CREATE OR REPLACE FUNCTION VALIDPROPERTY (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(14),
  DATATYPE VARCHAR(14))
  RETURNS CHAR(1)
  LANGUAGE RPGLE
  SPECIFIC VALIDPROPERTY3
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL2(VALIDPROPERTY3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION VALIDPROPERTY3
  IS 'Valid Property (w/Type)';

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION VALIDPROPERTY3
TO PUBLIC ;


CREATE OR REPLACE FUNCTION VALIDPROPERTY (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(14) )
  RETURNS CHAR(1)
  LANGUAGE RPGLE
  SPECIFIC VALIDPROPERTY2
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL2(VALIDPROPERTY2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION VALIDPROPERTY2
  IS 'Valid Property' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION VALIDPROPERTY2
TO PUBLIC ;


CREATE OR REPLACE FUNCTION VALIDCLASSPROPERTY (
  CLASS VARCHAR(14),
  PROPERTY VARCHAR(14),
  DATATYPE VARCHAR(14))
  RETURNS CHAR(1)
  LANGUAGE RPGLE
  SPECIFIC VALIDCLASSPROPERTY3
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL2(VALIDCLASSPROPERTY3)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION VALIDCLASSPROPERTY3
  IS 'Valid Class Property (w/Type)';

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION VALIDCLASSPROPERTY3
TO PUBLIC ;


CREATE OR REPLACE FUNCTION VALIDCLASSPROPERTY (
  CLASS VARCHAR(14),
  PROPERTY VARCHAR(14))
  RETURNS CHAR(1)
  LANGUAGE RPGLE
  SPECIFIC VALIDCLASSPROPERTY2
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTSQL2(VALIDCLASSPROPERTY2)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION VALIDCLASSPROPERTY2
  IS 'Valid Class Property (w/Type)';

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION VALIDCLASSPROPERTY2
TO PUBLIC ;


CREATE OR REPLACE FUNCTION PROPERTYOWNER (
  ENTITYID BIGINT ,
  PROPERTY VARCHAR(254) )
  RETURNS BIGINT
  LANGUAGE RPGLE
  SPECIFIC PROPERTYOWNER
  NOT DETERMINISTIC
  NOT FENCED
  PROGRAM TYPE SUB
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  EXTERNAL NAME STDENTINP(PROPERTYOWNER)
  PARAMETER STYLE GENERAL ;

COMMENT ON SPECIFIC FUNCTION PROPERTYOWNER
  IS 'Property Owner' ;

GRANT ALTER , EXECUTE
ON SPECIFIC FUNCTION PROPERTYOWNER
TO PUBLIC ;

